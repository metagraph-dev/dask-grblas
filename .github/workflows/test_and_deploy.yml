name: Test and Deploy

# Run whenever:
# - PR is opened
# - new commit is pushed to the PR
# - PR is merged to main
# - tag is added
on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - '*'

# Always check formatting and run tests
# Always build conda package
# If merging to main:
#   - upload to anaconda.org on the dev channel
# If tagging a release:
#   - upload to anaconda.org on both the dev and main channel
#   - upload to PyPI
jobs:
  test_build_deploy:
    runs-on: ubuntu-latest
    env:
      AC_LABEL: -l dev
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create env
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.9
      - name: Update env
        run: |
          conda install -q -c defaults -c conda-forge conda-build grblas dask pytest 'black=21.11b1'
          pip install -e .
      - name: Lint with Black
        run: |
          black --version
          black dask_grblas/ --check --diff
      - name: Pytest
        run: pytest
      - name: Conda Build
        run: conda build -c defaults -c conda-forge --python 3.9 recipe
      - name: Determine label
        if: contains(github.ref, 'refs/tags/')
        run: |
          echo "AC_LABEL=-l main -l dev" >> $GITHUB_ENV
      - name: Deploy to Anaconda Cloud
        if: (github.ref == 'refs/heads/main') || contains(github.ref, 'refs/tags/')
        run: |
          conda install -q anaconda-client
          # This doesn't rebuild, but simply computes the name of the file that was previously built
          OUTPUT=$(conda build --output -c defaults -c conda-forge --python 3.9 recipe)
          echo "Uploading $OUTPUT with label=${{ env.AC_LABEL }}"
          anaconda -t ${{ secrets.ANACONDA_ORG_TOKEN }} upload -u metagraph ${{ env.AC_LABEL }} --no-progress --force --no-register $OUTPUT
      - name: Build wheel
        if: contains(github.ref, 'refs/tags/')
        run: python setup.py sdist bdist_wheel
      - name: Publish to PyPI
        if: contains(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}